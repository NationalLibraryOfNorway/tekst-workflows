name: Build and deploy Node.js application

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        description: "The environment to deploy to (stage, prod)"
        type: string
      NODE_VERSION:
        required: true
        description: "The version of Node.js to use"
        type: string
      ENV_VARS_BASE64:
        required: false
        description: "Base64 encoded environment variables ready to be written to a .env file"
        type: string
      BUILD_OUTPUT_PATH:
        required: true
        description: "The path to the build output relative to the repository root, e.g. 'dist' or '.next'"
        type: string
    secrets:
      VAULT_URL:
        required: true
      VAULT_SECRET_PATH:
        required: true
      VAULT_ROLE_ID:
        required: true
      VAULT_SECRET_ID:
        required: true

jobs:
  verify-build-and-create-artifact:
    uses: NationalLibraryOfNorway/tekst-workflows/.github/workflows/node-verify-and-upload-artifact.yml@feat/set-dotenv-file
    with:
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      NODE_VERSION: ${{ inputs.NODE_VERSION }}
      ENV_VARS_BASE64: ${{ inputs.ENV_VARS_BASE64 }}
      BUILD_OUTPUT_PATH: ${{ inputs.BUILD_OUTPUT_PATH }}
    secrets:
        VAULT_URL: ${{ secrets.VAULT_URL }}
        VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
        VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
        VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}

  build-and-publish-docker-image:
    needs: verify-build-and-create-artifact
    uses: NationalLibraryOfNorway/tekst-workflows/.github/workflows/docker-build-and-push.yml@feat/set-dotenv-file
    with:
      USE_HARBOR: true
    secrets:
      VAULT_URL: ${{ secrets.VAULT_URL }}
      VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}

  deploy-to-k8s:
    uses: NationalLibraryOfNorway/tekst-workflows/.github/workflows/kubernetes-deploy.yml@feat/set-dotenv-file
    needs: build-and-publish-docker-image
    with:
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      IMAGE_VERSION: ${{ needs.build-and-publish-docker-image.outputs.image_version }}
    secrets:
        VAULT_URL: ${{ secrets.VAULT_URL }}
        VAULT_SECRET_PATH: ${{ secrets.VAULT_SECRET_PATH }}
        VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
        VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}