name: Build mvn Spring app

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      IMAGE_VERSION:
        required: true
        type: string
    secrets:
      VAULT_URL:
        required: true
      VAULT_SECRET_PATH:
        required: true
      VAULT_ROLE_ID:
        required: true
      VAULT_SECRET_ID:
        required: true

jobs:
  deploy-to-kubernetes:
    name: Deploy to kubernetes
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: [self-hosted-linux]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import stage secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_URL }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            ${{ secrets.VAULT_SECRET_PATH }}/k8s-text-${{ inputs.ENVIRONMENT }} * | K8S_ ;
            ${{ secrets.VAULT_SECRET_PATH }}/harbor * | HARBOR_

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.5'

      - name: Set REPOSITORY_NAME
        uses: NationalLibraryOfNorway/tekst-workflows/.github/action/set-repo-name@feat/add-build-args-to-docker-build

      - name: Replace values in k8s files
        uses: NationalLibraryOfNorway/tekst-workflows/.github/action/kubernetes-replace@feat/add-build-args-to-docker-build
        with:
          HARBOR_URL: ${{ steps.import-secrets.outputs.HARBOR_HARBOR_URL }}
          HOST_URL: ${{ steps.import-secrets.outputs.K8S_K8S_HOST_URL }}
          IMAGE_VERSION: ${{ inputs.IMAGE_VERSION }}
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}


      - name: Deploy to ${{ inputs.ENVIRONMENT }} cluster
        run: |
          echo "Deploying to ${{ inputs.ENVIRONMENT }}"
          kubectl config set-cluster stagecl --server=${{ steps.import-secrets.outputs.K8S_K8S_SERVER }}
          kubectl config set clusters.stagecl.certificate-authority-data ${{ steps.import-secrets.outputs.K8S_K8S_CA }}
          kubectl config set-credentials ${{ steps.import-secrets.outputs.K8S_K8S_USER }} --token=${{ steps.import-secrets.outputs.K8S_K8S_TOKEN }}
          kubectl config set-context tekst --cluster=stagecl --user=${{ steps.import-secrets.outputs.K8S_K8S_USER }} --namespace=tekst-${{ inputs.ENVIRONMENT }}
          kubectl config use-context tekst
          kubectl config view
          kubectl version
          kubectl apply -f k8s/${{ inputs.ENVIRONMENT }}/${{ env.REPOSITORY_NAME }}.yml
          kubectl rollout restart deploy/${{ env.REPOSITORY_NAME }}