name: Deploy to kubernetes

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
        description: "The environment to deploy to (stage, prod)"
      CLUSTER_NAME:
        required: true
        type: string
        description: "The name of the cluster to deploy to, (harvestk8s, k8s)"
      USE_PRODUCTION_URL:
        required: false
        description: "To use `produksjon.nb.no` or not (only available to `prod` environment)"
        type: boolean
      IMAGE_VERSION:
        required: true
        type: string
    secrets:
      VAULT_URL:
        required: true
      VAULT_SECRET_PATH:
        required: true
      VAULT_ROLE_ID:
        required: true
      VAULT_SECRET_ID:
        required: true

jobs:
  deploy-to-kubernetes:
    name: Deploy to kubernetes
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: [self-hosted-linux]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import stage secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_URL }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            ${{ secrets.VAULT_SECRET_PATH }}/${{ inputs.CLUSTER_NAME }}-text-${{ inputs.ENVIRONMENT }} * ;
            ${{ secrets.VAULT_SECRET_PATH }}/harbor * ;
            ${{ secrets.VAULT_SECRET_PATH }}/dockerhub *

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.5'

      - name: Set REPOSITORY_NAME
        uses: NationalLibraryOfNorway/tekst-workflows/.github/action/set-repo-name@main

      - name: Sanity check
        run: |
          echo ${{ inputs.USE_PRODUCTION_URL }}
          echo "check k8s.ingress: ${{ inputs.USE_PRODUCTION_URL  == 'false' || inputs.USE_PRODUCTION_URL  == null }}"
          echo "check production.ingress: ${{ inputs.USE_PRODUCTION_URL  == 'true' &&  inputs.ENVIRONMENT == 'prod'}}"

      - name: Replace values in k8s files (k8s ingress)
        if: ${{ inputs.USE_PRODUCTION_URL  == 'false' || inputs.USE_PRODUCTION_URL  == null }}
        uses: NationalLibraryOfNorway/tekst-workflows/.github/action/kubernetes-replace@main
        with:
          HARBOR_URL: ${{ steps.import-secrets.outputs.HARBOR_URL }}
          HOST_URL: ${{ steps.import-secrets.outputs.K8S_HOST_URL }}
          IMAGE_VERSION: ${{ inputs.IMAGE_VERSION }}
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}

      - name: Replace values in k8s files (production ingress)
        if: ${{ inputs.USE_PRODUCTION_URL  == 'true' &&  inputs.ENVIRONMENT == 'prod'}}
        uses: NationalLibraryOfNorway/tekst-workflows/.github/action/kubernetes-replace@main
        with:
          HARBOR_URL: ${{ steps.import-secrets.outputs.HARBOR_URL }}
          HOST_URL: ${{ steps.import-secrets.outputs.K8S_PRODUCTION_HOST_URL }}
          IMAGE_VERSION: ${{ inputs.IMAGE_VERSION }}
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}


      - name: Deploy to ${{ inputs.ENVIRONMENT }} cluster
        run: |
          echo "Deploying to ${{ inputs.ENVIRONMENT }}"
          kubectl config set-cluster somecl --server=${{ steps.import-secrets.outputs.K8S_SERVER }}
          kubectl config set clusters.somecl.certificate-authority-data ${{ steps.import-secrets.outputs.K8S_CA }}
          kubectl config set-credentials ${{ steps.import-secrets.outputs.K8S_USER }} --token=${{ steps.import-secrets.outputs.K8S_TOKEN }}
          kubectl config set-context tekst --cluster=somecl --user=${{ steps.import-secrets.outputs.K8S_USER }} --namespace=tekst-${{ inputs.ENVIRONMENT }}
          kubectl config use-context tekst
          kubectl config view
          kubectl version
          kubectl apply -f k8s/${{ inputs.ENVIRONMENT }}/${{ env.REPOSITORY_NAME }}.yml
          kubectl rollout restart deploy/${{ env.REPOSITORY_NAME }}