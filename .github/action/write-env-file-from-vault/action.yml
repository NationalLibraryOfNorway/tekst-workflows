name: Write secrets to .env
description: Set environment variables from Vault to .env. Useful for e.g. Next.js applications.

inputs:
  ENVIRONMENT:
    required: true
    description: 'Env name (stage/prod)'
  ENV_FILE:
    required: false
    default: '.env'
    description: 'Name of .env file'
  VAULT_URL:
    required: true
    description: 'The URL of the Vault server'
  VAULT_SECRET_PATH:
    required: true
    description: 'The path to the secret in Vault'
  VAULT_ROLE_ID:
    required: true
    description: 'The role ID for the AppRole authentication method'
  VAULT_SECRET_ID:
    required: true
    description: 'The secret ID for the AppRole authentication method'

runs:
  using: "composite"
  steps:
    - name: Set REPOSITORY_NAME
      uses: NationalLibraryOfNorway/tekst-workflows/.github/action/set-repo-name@main

    - name: Import environment variable secrets
      id: import-secrets
      uses: hashicorp/vault-action@v3
      with:
        url: ${{ inputs.VAULT_URL }}
        method: approle
        roleId: ${{ inputs.VAULT_ROLE_ID }}
        secretId: ${{ inputs.VAULT_SECRET_ID }}
        secrets: |
          ${{ inputs.VAULT_SECRET_PATH }}/${{ env.REPOSITORY_NAME }}-${{ inputs.ENVIRONMENT }} * ;
          

    - name: Write Vault secrets to JSON
      shell: bash
      run: |
        echo "${{ toJSON(steps.import-secrets.outputs) }}" >> secrets.json

    - name: Set environment variables
      shell: bash
      run: |
        echo "${{ steps.import-secrets.outputs }}" >> ${{ inputs.ENV_FILE }}

    - name: Set environment variables
      shell: bash
      run: |
        jq -r 'to_entries[] | .key + "=" + .value' secrets.json >> ${{ inputs.ENV_FILE }}

    - name: debug -- print .env
      shell: bash
      run: |
          cat ${{ inputs.ENV_FILE }}

    - name: Cleanup
      shell: bash
      run: |
        rm secrets.json